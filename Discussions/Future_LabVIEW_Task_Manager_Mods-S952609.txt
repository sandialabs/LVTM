X Add tip strips in appropriate places, including the control for "Search Clones Up To".  This needs to explain what kinds of clones won't and will be searched for.
X Make the tool accessible from the LV "Tools" menu.
* Cause a value of zero in "Search Clones Up To" to filter out all statically-referenced clones.  The goal is to display no MORE clones than this value.
* Refresh should include re-checking for new app instances.
* Show columns indicating if a VI's FP/BD are currently open or closed.  Optionally click on these columns to open them, shift-click to close them.  Inspired by post from drjdpowell: <http://lavag.org/topic/14921-labview-task-manager/page-3#entry92739>
* Option to group by library or not (flat list).  Flat is useful when wanting to sort by columns State, Paused?, Hilite?, Reentrant, etc.
** If grouped is active, hide the column "Library Name" (CAUTION! This field is used to display the message "Error" when an operation fails).
** If grouped is active, menu items allow to Expand All / Collapse All.
* Merge columns "Reentrant" and "Reentrancy Type" into one column with three possible modes: NotReentrant, Preallocated, Shared.
* Use a mechanism (.ini file?) to hold and persist User Preferences.  Include: default value for "Search Clones Up To", default value for Group/Flat option, initially launch tree as Expanded/Collapsed (if grouping option = Grouped), show/hide some columns such as Code Size, Data Size, etc.
* Include a "Tools" item on menu bar.  Create a plug-in architecture allowing users to launch their own LV debugging tools from here, simply by dropping their own tool VIs into a "plugins" folder.
** Include the following tools to get them started:  
*** A tool to find and list all dependent DLL files.  See <http://www.evernote.com/shard/s286/sh/bc26a3f8-2c02-47b7-9a10-6a42761c1455/7766648ffe434144c2804f1429202977>.
*** A tool to search a LV project (or app instance) for likely ACBR VIs.  The intent is to help the user find all ACBR VIs for which they may want to place the "Clone VIs FG" drop-in VI.
* Right-click options as alternate ways to perform current button functions.  Needs to work with multiple selections as well as single.
* Show a count of all items in tree, observing the file type filters.
* Consider reversing the logic of the item type filters, for consistency.  Currently these are checked to EXCLUDE the associated type, but this is the opposite logic to that used in the VI Hierarchy view, where item types are selected to be INCLUDED.
* Include a column that lists the VI's Caller.  Inspired by SJ_Buddy: <http://lavag.org/topic/14921-labview-task-manager/?p=105474>
* This entire tool deserves a nice custom icon!


O IF POSSIBLE -- Allow this tool to run as a separate process.  This would likely focus around replacing the Read Property node: "App.AllVIs" with "App.ExportedVIs"
    * The former "Returns a list of VIs in memory for the specified application instance."
        # This property returns an error if you wire a remote application reference to the reference input. For a remote application, use the Exported VIs in Memory property to return a list of exported VIs.
    * The later "Returns a list of exported VIs in memory."
        # This property is similar to the Exported VIs list option in the Exported VIs section on the VI Server page of the Options dialog box.
    * It may be that this tool CANNOT be run as a separate process.  VI Analyzer indicates several functions which a "not compatible with executable".
